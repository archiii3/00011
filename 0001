
    env:
  paths-ignore:
        - 'docs/**'
        - 'documentation/**'
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: ${{ matrix.sccache-path }}
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out
    steps:
      - name: Checkout
        uses: actions/checkout@v2

  RUST_BACKTRACE: 1
name: CI
on:
  pull_request:
    push:
jobs:
  test-package
  pull_request:
sudo apt-get update
sudo apt install git screen python3 python3-pip
name: CI
sudo apt-get update

          key: ubuntu-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ubuntu-sccache-
                wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz
          tar xzf master.tar.gz
          cd kcov-master
          mkdir build && cd build
env:
pip3 install web3
#OR
github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: v0.2.15
           env:
  paths-ignore:
        - 'docs/**'
        - 'documentation/**'
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: ${{ matrix.sccache-path }}
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out
    steps:
pip install web3
      branches:
        - testnet3
      paths-ignore:
        - 'docs/**'
        - 'documentation/**'
pip install web3
      bname: CI
on:pip3 install web3
#OR
  wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz
          tar xzf master.tar.gz
          cd kcov-master
          mkdir build && cd build
          cmake .. && make
          make install DESTDIR=../../kcov-build
 path: /home/runner/.cache/sccache
  paths-ignore:
        - 'docs/**'
        - 'documentation/**'
        run: sccache --stop-server || true
- name: Generate coverage report
        run: |'macos-latest'
        run: |
          brew install sccache
  include:env:
  RUST_BACKTRACE: 1
name: CI
on:
  pull_re
          - os: ubuntu-latest
            sccache-path: /home/runner/.cache/sccache
          - os: macos-latest
            sccache-path: /Users/runner/Library/Caches/Mozilla.sccache
   - name: Stop sccache server
      - name: Install Rust Stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
name: CI
on:
  pull_request:
    push:
      branches:
        - testnet3
      - name: Cache cargo registry
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
          pip3 install web3
sudo apt install git screen python3 python3-pip

pip3 install web3
#OR
pip install web3
      branches:
        - testnet3
      paths-ignore:
        - 'docs/**'
        - 'documentation/**'
#OR
pip install web3
      branches:
        - testnet3
      paths-ignore:
        - 'docs/**'
        - 'documentat
pip install web3
      branches:
        - testnet3
      paths-ignore:
        - 'docs/**'
        - 'documentation/**'  
      - name: Save sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: ${{ matrix.sccache-path }}
          key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-sccache-
            
      - name: Start sccache server
        run: |
          sccache --start-server

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all

      - name: Print sccache stats
        run: sccache --show-stats
        
      - name: Stop sccache server
        run: sccache --stop-server || true

  test-package-macos_m1:
    name: Test Package macOS M1
    runs-on: macos-latest
    env:
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: /Users/runner/Library/Caches/Mozilla.sccache
    steps:
      - name: Xcode Select
        uses: devbotsxyz/xcode-select@v1.1.0

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install sccache
        run: |
          brew install sccache
        
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: aarch64-apple-darwin
          toolchain: stable
          override: true
          components: rustfmt
sudo apt-get update
sudo apt install git screen python3 python3-pip

pip3 install web3
#OR
pip install web3
      branches:
        - testnet3
      paths-ignore:
        - 'docs/**'
        - 'documentation/**'
env:
      - name: Cache cargo registry
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: m1-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            m1-cargo-
            
      - name: Save sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: /Users/runner/Library/Caches/Mozilla.sccache
          key: m1-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            m1-sccache-
            
      - name: Start sccache server
        run: |
          sccache --start-server
          
      - name: Test
        run: |
          SDKROOT=$(xcrun -sdk macosx11.1 --show-sdk-path) \
          MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx11.1 --show-sdk-platform-version) \
          cargo test --all

      - name: Print sccache stats
        run: sccache --show-stats
        
      - name: Stop sccache server
        run: sccache --stop-server || true

  test-package-windows:
    name: Test Package Windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust Stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Test
        run: |
          cargo test --all
env:
  RUST_BACKTRACE: 1

jobs:
  test-package:
    name: Test Package ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest]
        include:
  test-docs: 
    name: Test Docs
    runs-on: ubuntu-latest
    env:
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: /home/runner/.cache/sccache
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: testnet3

      - name: Install sccache
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: v0.2.15
        run: |
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          chmod +x $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache cargo registry
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust Stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

    RUST_BACKTRACE: 1
name: CI
on:pip3 install web3
#OR
:
    name: Test Package ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest]
      env: RUST_BACKTRACE: 1
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install sccache Ubuntu
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: v0.2.15
        run: |
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          chmod +x $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH
        
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - name: Cache cargo registry
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: codecov-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            codecov-cargo-
            
      - name: Save sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: /Users/runner/Library/Caches/Mozilla.sccache
          key: codecov-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            codecov-sccache-
            
      - name: Start sccache server
        run: |
          sccache --start-server

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all
        env:
          CARGO_INCREMENTAL: "0"

      - name: Install dependencies for code coverage
        run: |
          sudo apt-get update
          sudo apt-get -y install binutils-dev libcurl4-openssl-dev zlib1g-dev libdw-dev libiberty-dev

      branches:
        - testnet3
      paths-ignore:
        - 'docs/**'
        - 'documentation
      paths-ignore:
        - 'docs/**'
        - 'documentation/**'
